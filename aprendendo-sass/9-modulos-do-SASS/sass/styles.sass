@use 'sass:color'
@use 'sass:list'
@use 'sass:map'
@use 'sass:math'

$color-adjust: color.adjust(#6b717f, $red: 25)
$color-adjust2: color.adjust(#6b717f, $red: 25, $blue: 200)

.color-1
    color: $color-adjust
    background-color: $color-adjust2


$color-scale: color.scale($color-adjust2, $lightness: -40%)

.color-2
    background-color: $color-scale

$color-scale2: color.scale($color-adjust2, $lightness: +40%)


.color-3
    background-color: $color-scale2

$color-invert: color.invert($color-scale2)
.color-4
    background-color: $color-invert

.color-5
    color: blue
    background-color: color.mix(blue, red)

.color-6
    background-color: desaturate(#78b4, 30%)

.color-7
    background-color: lighten(red, 20% )

$list: 10px, 20px, 30px, 50px

$vList: list.index($list, 50px)
$vList2: list.index($list, 40px)

$addList: list.append($list, 50px)
$addList2: list.append($list, 40px)

// @if $vList == null
//     @debug $addList
// @else if $vList2 == null
//     @debug $addList2

// @debug $list

$lista-1: blue, red, 20%
$lista-2: purple, 20px, 30px

$unir-listas: list.join($lista-1, $lista-2)

@debug $unir-listas

$lista-3: 10, 20, 30, red, color, green

@debug list.length($lista-3)

$lista-4: 10px, 20px 10px


@debug list.nth($lista-3, 2)


$m: ('font': 3px, 'color': blue, 'bold': false)
$n: ('border': 2px solid red, 'transition': 1s)

@debug $m
@debug $n

$x: map.merge($m, $n)
@debug $x

$border-title: map.get($x, 'border')

h1
    border: $border-title

@if map.has-key($x,'transition')
    h1
        trasition: map.get($x,'transition')
        
h1:hover
    background-color: $color-invert

$pi: math.$pi

@debug $pi
            
$z: 3.5

@debug math.ceil($z)
@debug math.floor($z)

$NS: 10, 20, 100, 5

@debug math.max($NS...)
@debug math.min($NS...)

@debug math.random(30)